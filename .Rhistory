#Working directory
setwd("/Users/luisrojo/Library/CloudStorage/OneDrive-usach.cl/PhD/Literature_Review/Coordinated-Charging-Literature-Review")
# libraries
require(readxl)
require(writexl)
require(dplyr)
require(tidyverse)
require(ggplot2)
require(xtable)
require(tikzDevice)
options(mc.cores = parallel::detectCores(),
# tikzLatex = "PATH",
tz="CA")
# read the entire date base of articles to read
articles <- read_excel(path = "Database.xlsx", sheet = "ReadingList") %>%
dplyr::select(c("ID", "Removing phase", "Author Full Names",
"Article Title", "Source Title", "Author Keywords",
"Keywords Plus", "Publication Year")) %>%
rename(Author = "Author Full Names", Title = "Article Title",
Journal = "Source Title", Keywords = "Author Keywords",
KP = "Keywords Plus", Year = "Publication Year",
Removing = "Removing phase") %>%
mutate(Removing = ifelse(is.na(Removing), "Pending", Removing),
ID = str_replace(ID, pattern = " ", replacement = ""))
# read the filtered papers already read and classified
##### first iteration:
# - single station, 19 articles
# - multi station, 12 articles
# - power grid, 10 articles
classified <- lapply(c("Single_Station", "Multi_Station", "Power_Grid"),
function(x) {
read_excel(path = "Database.xlsx", sheet = x) %>%
mutate(Problem = x)
}) %>%
bind_rows()
data <- left_join(articles %>%
mutate(Title = toupper(Title)),
classified %>%
dplyr::select(-c("Year", "Journal", "Authors", "Abstract",
"Keywords", "Analysis", "Cristicism",
"Why this classification?")) %>%
mutate(Title = toupper(Title)),
by = "Title")
journal_status <- articles %>%
filter(Removing %in% c("Abstract", "Body", "Pending", "OK")) %>%
group_by(Removing, Journal) %>%
summarise(Count = n()) %>%
ungroup() %>%
group_by(Journal) %>%
filter(sum(Count, na.rm = TRUE) != 1) %>%
ungroup() %>%
pivot_wider(names_from = Removing, values_from = Count) %>%
arrange(OK)
# let's extract the keywords by year, journal and problem
keyword_complete <- apply(data, 1, function(x) {
# extract keywords
words <- x["Keywords"] %>%
# dplyr::select(c("Keywords")) %>%
# pull() %>%
strsplit("; ") %>%
unlist() %>%
toupper() %>%
data.frame(Keyword = .)
# assign year, journal and problem
words <- words %>%
mutate(ID = x["ID"],
Year = x["Year"],
Journal = x["Journal"],
Problem = x["Problem"],
Removing = x["Removing"])
}) %>%
bind_rows()
keyword_analysis <- keyword_complete %>%
filter(Removing %in% c("OK")) %>%
group_by(Keyword, ID) %>%
summarise(Count = n()) %>%
ungroup()
keyword_id <- keyword_complete %>%
rowwise() %>%
mutate(Inclusion = ifelse(Keyword %in% keyword_analysis$Keyword,
TRUE, FALSE)) %>%
ungroup() %>%
filter(Inclusion) %>%
dplyr::select(c("ID")) %>%
pull() %>%
unique()
articles_id <- articles %>%
# in selected journals
filter(Journal %in% journal_status$Journal) %>%
# include selected keywords
filter(ID %in% keyword_id) %>%
dplyr::select(c("ID")) %>%
mutate(Inclusion = TRUE)
articles_final <- left_join(articles,
articles_id,
by = "ID") %>%
mutate(Inclusion = ifelse(is.na(Inclusion), FALSE, Inclusion))
require(writexl)
require(xlsx)
require(xlsx)
require(xlsx)
require(xlsx)
require(xlsx)
install.packages("rJava")
require(xlsx)
